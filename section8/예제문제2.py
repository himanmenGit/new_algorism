# 백준 문제 10844 쉬운계단수
# https://www.acmicpc.net/problem/10844

"""
계단수
45656이란 수는 인전합 모든 자리의 차이가 1이다.
n의 계단수가 총 몇개 있는지 구해보자
0으로 시작하는 수는 계단수가 아니다
1 <= n <= 100
1 = 9
2 = 17
"""

"""
1 -> 1 2 3 4 5 6 7 8 9 f(1) = 9
2 -> 10 12 23 34 45 56 67 78 89 21 32 43 54 65 76 87 98 f(2) = 17
3 ->        101 121 123 = 32
        210 212 232 234 
        321 323 343 345 
        432 434 454 456
        543 545 565 567
        654 656 676 678
        765 767 787 789
        876 878 898
        987 989 
4-> 1010 1012 1212 1210
      
f(1) = 9
f(2) = 9 + (9-1) = 17
f(3) = 17 + (17 - 2) = 32
        48 + 4 + 4  +
64 - 4-1 (3)= 61
122 - 5-1(6) = 116
232 - 6-1(10) = 222
444 - 7-1(20) = 424
848 - 8-1(35) = 813
1626 = 9-1(70)  = 1556
f(n) = f(n-1)*2 - n-1
"""

# MOD = 1_000_000_000
#
# n = int(input())
#
# dp = [-1] * 101
# dp[1] = 9
# dp[2] = 17
#
# for i in range(3, 101):
#     dp[i] = (dp[i-1] + dp[i-1]) - (i-1)
#     dp[i] %= MOD
#
# print(dp[n])


MOD = 1_000_000_000

# cache[n][d]: 길이가 n, 마지막 숫자가 d인 계단수 개수
cache = [[0] * 10 for _ in range(101)]

for j in range(1, 10):
    cache[1][j] = 1

for i in range(2, 101):
    for j in range(10):
        if j > 0:
            cache[i][j] += cache[i - 1][j - 1]
            cache[i][j] %= MOD
        if j < 9:
            cache[i][j] += cache[i - 1][j + 1]
            cache[i][j] %= MOD

ans = 0
N = int(input())
for j in range(10):
    ans += cache[N][j]
    ans %= MOD

print(ans)
